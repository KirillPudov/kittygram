name: Terraform

on:
  workflow_call:
    inputs:
      exec:
        required: true
        type: string
    outputs:
      ip_addr:
        description: "IP addr of kitty-vm"
        value: ${{ jobs.terraform.outputs.ip }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      ip: ${{ steps.apply.outputs.ip }}
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: v1.11.2
      - name: Check out code
        uses: actions/checkout@v3
      - name: Terraform init
        working-directory: ./infra
        run: |
          TF_CLI_CONFIG_FILE=./.terraformrc terraform init --upgrade
      - name: Terraform Plan
        working-directory: ./infra
        if: ${{ inputs.exec == 'plan' }}
        run: |
          export YANDEX_TOKEN=$YANDEX_TOKEN
          export YANDEX_CLOUD_ID=$YANDEX_CLOUD_ID
          export YANDEX_FOLDER_ID=$YANDEX_FOLDER_ID
          export YANDEX_ZONE=$YANDEX_ZONE
          export SSH_KEY=$SSH_KEY
          terraform plan
        env:
          TF_VAR_YANDEX_TOKEN: ${{ secrets.YANDEX_TOKEN }}
          TF_VAR_YANDEX_CLOUD_ID: ${{ secrets.YANDEX_CLOUD_ID }}
          TF_VAR_YANDEX_FOLDER_ID: ${{ secrets.YANDEX_FOLDER_ID }}
          TF_VAR_YANDEX_ZONE: ${{ secrets.YANDEX_ZONE }}
          TF_VAR_SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Terraform apply
        id: apply
        working-directory: ./infra
        if: ${{ inputs.exec == 'apply' }}
        run: |
          terraform apply -var="YANDEX_TOKEN=${{ secrets.YANDEX_TOKEN }}" -var="YANDEX_CLOUD_ID=${{ secrets.YANDEX_CLOUD_ID }}" -var="YANDEX_FOLDER_ID=${{ secrets.YANDEX_FOLDER_ID }}" -var="YANDEX_ZONE=${{ secrets.YANDEX_ZONE }}" -var="SSH_KEY=${{ secrets.SSH_KEY }}"
          echo "ip_addr=`terraform output -raw instalce_ip_addr`"
        env:
          TF_VAR_YANDEX_TOKEN: ${{ secrets.YANDEX_TOKEN }}
          TF_VAR_YANDEX_CLOUD_ID: ${{ secrets.YANDEX_CLOUD_ID }}
          TF_VAR_YANDEX_FOLDER_ID: ${{ secrets.YANDEX_FOLDER_ID }}
          TF_VAR_YANDEX_ZONE: ${{ secrets.YANDEX_ZONE }}
          TF_VAR_SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Terraform destroy
        working-directory: ./infra
        if: ${{ inputs.exec == 'destroy' }}
        run: terraform destroy -var="YANDEX_TOKEN=${{ secrets.YANDEX_TOKEN }}" -var="YANDEX_CLOUD_ID=${{ secrets.YANDEX_CLOUD_ID }}" -var="YANDEX_FOLDER_ID=${{ secrets.YANDEX_FOLDER_ID }}" -var="YANDEX_ZONE=${{ secrets.YANDEX_ZONE }}" -var="SSH_KEY=${{ secrets.SSH_KEY }}"
        env:
          TF_VAR_YANDEX_TOKEN: ${{ secrets.YANDEX_TOKEN }}
          TF_VAR_YANDEX_CLOUD_ID: ${{ secrets.YANDEX_CLOUD_ID }}
          TF_VAR_YANDEX_FOLDER_ID: ${{ secrets.YANDEX_FOLDER_ID }}
          TF_VAR_YANDEX_ZONE: ${{ secrets.YANDEX_ZONE }}
          TF_VAR_SSH_KEY: ${{ secrets.SSH_KEY }}