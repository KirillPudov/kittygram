name: Main workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        options:
          - plan
          - apply
          - destroy

concurrency:
  group: ${{ github.head_ref ||  github.ref }}

jobs:
  terraform:
    uses: ./.github/workflows/terraform.yaml
    with:
      exec: ${{ github.event.inputs.action }}
    secrets:
      TF_VAR_YANDEX_TOKEN: ${{ secrets.YANDEX_TOKEN }}
      TF_VAR_YANDEX_CLOUD_ID: ${{ secrets.YANDEX_CLOUD_ID }}
      TF_VAR_YANDEX_FOLDER_ID: ${{ secrets.YANDEX_FOLDER_ID }}
      TF_VAR_YANDEX_ZONE: ${{ secrets.YANDEX_ZONE }}
      TF_VAR_PUB_SSH_KEY: ${{ secrets.PUB_SSH_KEY }}
      TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}
      TF_VAR_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==6.0.0 flake8-isort==6.0.0
    - shell: bash
      env:
        GITHUB_USER_NAME: ${{ secrets.GITHUB_USER_NAME }}
        DOMAIN: ${{ secrets.DOMAIN }}
        DOCKER_HUB_USER_NAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
      run: |
        echo "repo_owner: $GITHUB_USER_NAME" >> tests.yml
        echo "kittygram_domain: $DOMAIN" >> tests.yml
        echo "dockerhub_username: $DOCKER_HUB_USER_NAME" >> tests.yml
    - name: Test pep8
      run: python -m flake8 backend/

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          build-args: |
            BACK_DB_HOST=${{ secrets.BACK_DB_HOST }}
            BACK_DB_PORT=${{ secrets.BACK_DB_PORT }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          tags: ${{ secrets.DOCKER_HUB_USER_NAME }}/kittygram_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER_NAME }}/kittygram_frontend:latest

  build_gateway_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push gateway to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER_NAME }}/kittygram_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' }}
    needs:
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
      - terraform
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - shell: bash
      env:
        BACK_DB_HOST: ${{ secrets.BACK_DB_HOST }}
        BACK_DB_PORT: ${{ secrets.BACK_DB_PORT }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        PGDATA: ${{ secrets.PGDATA }}
      run: |
        sleep 5m
        echo "BACK_DB_HOST=$BACK_DB_HOST" >> .env
        echo "BACK_DB_PORT=$BACK_DB_PORT" >> .env
        echo "POSTGRES_USER=$POSTGRES_USER" >> .env
        echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
        echo "POSTGRES_DB=$POSTGRES_DB" >> .env
        echo "PGDATA=$PGDATA" >> .env
    - shell: bash
      run: echo "$host"
      env:
        host: ${{ needs.terraform.outputs.instance_ip_addr }}
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ needs.terraform.outputs.instance_ip_addr }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "docker-compose.production.yml"
        target: "./"
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ needs.terraform.outputs.instance_ip_addr }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        source: ".env"
        target: "./"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ needs.terraform.outputs.instance_ip_addr }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: | #Wait vm create
          sudo docker compose -f docker-compose.production.yml pull
          sudo docker compose -f docker-compose.production.yml down
          sudo docker compose -f docker-compose.production.yml up -d
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --no-input

  auto_yandex_tests:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
      - terraform
      - deploy
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest-pep8 pytest==5.4.0 PyYAML requests
    - shell: bash
      env:
        GITHUB_USER_NAME: ${{ secrets.GITHUB_USER_NAME }}
        DOMAIN: ${{ secrets.DOMAIN }}
        DOCKER_HUB_USER_NAME: ${{ secrets.DOCKER_HUB_USER_NAME }}
      run: |
        echo "repo_owner: $GITHUB_USER_NAME" >> tests.yml
        echo "kittygram_domain: http://${{ needs.terraform.outputs.instance_ip_addr }}" >> tests.yml
        echo "dockerhub_username: $DOCKER_HUB_USER_NAME" >> tests.yml
    - name: Run Yandex Tests
      run: pytest tests

  telegramm-notify:
      runs-on: ubuntu-latest
      needs:
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
      - deploy
      - auto_yandex_tests
      steps:
        - name: send telegram message on push
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAMM_CHAT_ID }}
            token: ${{ secrets.TELEGRAMM_TOKEN }}
            message: |
              ðŸ‘€ ${{ github.actor }} created commit:
              ðŸ’¬ Commit message: ${{ github.event.commits[0].message }}

              ðŸ—‚ Repository: ${{ github.repository }}

              ðŸ“ˆ See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}